{
  "name": "ezsalon",
  "private": true,
  "version": "1.0.0",
  "description": "EZ Salon API",
  "license": "MIT",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/jest/bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.config.json",
    "test:e2e:watch": "jest --config ./test/jest-e2e.config.json --watch",
    "test:e2e:cov": "jest --config ./test/jest-e2e.config.json --coverage",
    "test:e2e:auth": "jest --config ./test/jest-e2e.config.json --testNamePattern=\"Auth E2E\"",
    "test:e2e:auth-customers": "jest --config ./test/jest-e2e.config.json --testNamePattern=\"Auth Customer E2E\"",
    "test:e2e:auth-roles": "jest --config ./test/jest-e2e.config.json --testNamePattern=\"Auth Role E2E\"",
    "test:e2e:customers": "jest --config ./test/jest-e2e.config.json --testNamePattern=\"Customers E2E\"",
    "test:e2e:products": "jest --config ./test/jest-e2e.config.json --testNamePattern=\"Products E2E\"",
    "seed:all": "ts-node src/database/seed-all.ts",
    "seed:permissions": "ts-node src/database/seed-permissions.ts",
    "seed:users": "ts-node src/database/seed-users.ts",
    "seed:products": "ts-node src/database/seed-products.ts",
    "precommit": "npm run lint:check && npm run test",
    "prepare": "npm run build"
  },
  "engines": {
    "npm": ">=10.0.0",
    "node": ">=20.0.0"
  },
  "dependencies": {
    "@nestjs/common": "^10.4.20",
    "@nestjs/config": "^3.3.0",
    "@nestjs/core": "^10.4.20",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.4.20",
    "@nestjs/platform-socket.io": "^10.4.20",
    "@nestjs/swagger": "^7.4.2",
    "@nestjs/typeorm": "^10.0.2",
    "@nestjs/websockets": "^10.4.20",
    "@types/passport-facebook": "^3.0.3",
    "@types/passport-google-oauth20": "^2.0.16",
    "@types/redis": "^4.0.11",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "dotenv": "^16.4.7",
    "ioredis": "^5.7.0",
    "mysql2": "^3.11.4",
    "passport": "^0.7.0",
    "passport-apple": "^2.0.2",
    "passport-facebook": "^3.0.0",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "redis": "^4.7.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "socket.io": "^4.8.1",
    "typeorm": "^0.3.20"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^10.4.5",
    "@nestjs/schematics": "^10.1.4",
    "@nestjs/testing": "^10.4.20",
    "@swc/cli": "^0.5.2",
    "@swc/core": "^1.10.8",
    "@types/bcryptjs": "^2.4.6",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^6.0.2",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jest": "^28.9.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.2.3",
    "eslint-plugin-promise": "^7.2.1",
    "eslint-plugin-security": "^3.0.1",
    "globals": "^15.14.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
